/**
 * Created by DNS on 03.03.14.
 */

var Time=require('../index.js'),
    util=require('util');

var time_zone_correction=-new Date().getTimezoneOffset()/60;

describe("", function(){
    var now_time, time;

    beforeEach(function(){
        now_time=new Date();
        time=new Time();
    });

    it('проверка конструктора', function(){
        time=new Time(now_time.getTime());
        expect(time.getTime()).toBe(now_time.getTime()/1000);

        time.reset(now_time.setTime(now_time-10));
        expect(time.getTime()).toBe(now_time.getTime()/1000);

        now_time=new Date(2014, 2, 5, 8, 20, 30, 100);
        expect(time.reset('05.03.2014 8:20:30.100', time_zone_correction, 'day.month.year hour:minute:second.millisecond').getTime(0)).toBe(now_time.getTime()/1000);
    });

    it('проверка stringToTime', function(){
        expect(time.stringToTime('04.03.2014 11:29:13.100', 'day.month.year hour:minute:second.millisecond').getTime()-time_zone_correction*Time.hour).toBe(new Date(2014, 2, 4, 11, 29, 13, 100).getTime());
        expect(time.stringToTime('04.03.2014 11:29:13.100', 'day.month.year hour:minute:second').getTime()-time_zone_correction*Time.hour).toBe(new Date(2014, 2, 4, 11, 29, 13).getTime());
        expect(time.stringToTime('04.03.2014 11:29:13', 'day.month.year hour:minute:second.millisecond')).toBe(false);
        expect(time.stringToTime('11:29:13.100 04.03.2014 ', 'hour:minute:second.millisecond day.month.year').getTime()-time_zone_correction*Time.hour).toBe(new Date(2014, 2, 4, 11, 29, 13, 100).getTime());
    });

    it('Проверка toString и методов типа getHour', function(){
        var time_string='05.03.2014 09:20:10.012';
        var time_format='day.month.year hour:minute:second.millisecond';
        time.reset(time_string, 0, time_format);
        expect(time.getDay()).toBe(5);
        expect(time.getMonth()).toBe(3);
        expect(time.getYear()).toBe(2014);
        expect(time.getHours()).toBe(9);
        expect(time.getMinutes()).toBe(20);
        expect(time.getSeconds()).toBe(10);
        expect(time.getMilliseconds()).toBe(12);
        expect(time.getWeekDay()).toBe(3);
        expect(time.toString(0, time_format)).toBe(time_string);
    });
});
